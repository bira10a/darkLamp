html,
body {
  height: 100%;
}

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }

    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
}

@else {

  // По брейк-поинтам
  [class*="__container"] {
    margin: 0 auto;

    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    }

    @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }

    @media (max-width: $pc) {
      max-width: rem(970);
    }

    @media (max-width: $tablet) {
      max-width: rem(750);
    }

    @media (max-width: $mobile) {
      max-width: none;

      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

body {
  font-family: 'Noto Serif JP', sans-serif;
  font-weight: 500;
  font-size: rem(16);
  line-height: 1.2;
  color: $default;
  background-color: #2E2E2E;
  display: flex;
  flex-direction: column;

  // font-family: 'Roboto', sans-serif;
  // font-family: 'Roboto Slab', sans-serif;
}

// .body--hidden {
//   overflow: hidden;
// }

.main {
  flex-grow: 1;
}

.container {
  // max-width: 1320px;
  // margin: 0 auto;
  // padding: 0 15px;
}

.btn {
  font-family: 'Roboto Slab', sans-serif;
  font-weight: 500;
  font-size: rem(20);
  line-height: 1;
  text-transform: uppercase;
  border-radius: 5px;
  color: $default;
  background-color: $accent;
  padding: 22px 45px;
  outline: transparent;
  transition: box-shadow linear 0.2s, background-color linear 0.2s, color linear 0.2s;
  backdrop-filter: blur(34px);

    &:focus {
      box-shadow: 0 0 0 4px #E0EDCF;
    }

    &:hover {
      background-color: #dda56d;
      color: #3f3a3a;
    }

    &:active {
      box-shadow: inset 0 4px 4px rgba(0, 0, 0, 0.25);
      color: rgba(255, 255, 255, 0.5);
    }

    @include r(768) {
      font-size: 16px;
    }
}


.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.title {
  text-align: center;
  @include adaptiveValue("font-size", 38, 26);
}

#overlay {
  position: fixed;
  /* Sit on top of the page content */
  display: none;
  /* Hidden by default */
  width: 100%;
  /* Full width (cover the whole page) */
  height: 100%;
  /* Full height (cover the whole page) */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  /* Black background with opacity */
  z-index: 200;
  /* Specify a stack order in case you're using a different order for other elements */
  cursor: pointer;
  /* Add a pointer on hover */
}


.form-one {
  position: relative;
  max-width: rem(456);
  width: 100%;
  
  &__input {
    padding: 18px 105px 18px 21px;
    background-color: $default;
    width: 100%;
    border-radius: 5px;
    outline: transparent;
    transition: all linear 0.2s;
  
    &::placeholder {
      font-family: 'Roboto', sans-serif;
      font-size: rem(14);
      opacity: 0.7;
      color: $accent;
      transition: all linear 0.2s;
    }
  
    &:focus {
      box-shadow: 0 0 0 4px #7e8179d0;
    }
  
    &:hover {
      &::placeholder {
        color: #333333;
      }
    }
  
    &:active {
      box-shadow: 0 0 0 4px #dde481d0;
    }
  }
  
  &__btn {
    position: absolute;
    top: 0;
    right: 0;
    width: rem(100);
    height: rem(60);
    display: flex;
    justify-content: center;
    align-items: center;
    outline: transparent;
    transition: all linear 0.2s;
  
    &::before {
      content: "";
      display: block;
      mask: url('../images/sprite.svg#telegram') center / cover no-repeat;
      width: 31px;
      height: 25px;
      background-color: $accent;
      transition: all linear 0.2s;
    }
  
    &:focus {
      box-shadow: 0 0 0 4px rgb(107, 104, 104);
    }
  
    &:hover {
      background-color: rgb(145, 143, 143);
  
      &::before {
        background-color: $default;
      }
    }
  
    &:active {
      background-color: rgb(65, 61, 61);
  
      &::before {
        background-color: $default;
      }
    }
  }
}


//======================================================================================================================================================== для реализации бургера, вешаем класс на body

.lock {
  overflow: hidden;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.9);
  }
}